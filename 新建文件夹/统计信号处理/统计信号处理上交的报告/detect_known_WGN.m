function [pf_test,pd_test,pd]=detect_known_WGN(T,snr,pf)
%%%detect_known_WGN: 检测确知信号---Monte Carlo 仿真
%%%input             T-----------观测时间
%%%                  snr---------信噪比(信号平均功率与噪声平均功率之比)，用数值表示10^(snr/10)
%%%                  pf----------限定的虚警概率  pf<=0.01
%%%output            pd----------理论的正确检测概率
%%%                  pf_test-----仿真实验得到的虚警概率
%%%                  pd_test-----仿真实验得到的正确检测概率
%%%by tanjunhong,2011,6,30
%%%modified 

%pf=0.01,T=0.01,snr=-10     %test this function

%%----信号参数设置----------------------------------------
fs=4000;                  %对接收数据的采样频率
ts=1/fs;                  %采样时间间隔
N=T/ts;                   %观测数据个数
A=1;                      %发射信号幅度
t=(1:N)'*ts;              %采样时刻的列矢量

%%%----求理论的正确检测概率--------------------------------
snr=10^(snr/10);          %信噪比
d=snr*N;                  %d=Es/n0;由信噪比表示d:信号能量Es与单位频带内噪声功率n0之比
u0=qfuncinv(pf);          %由虚警概率pf反求u0  
pd=qfunc(u0-sqrt(d));     %理论的正确检测概率值

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%  仿真确知信号  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
fc=250;                   %信号频率
phi=pi/4;                 %信号相位
s=A*sin(2*pi*fc*t+phi);   %列信号矢量

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%  确定高斯白噪声方差  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Ps=A^2/2;                 %信号的平均功率
Es=Ps*T;                  %观测时间T内信号能量
n0=Es/d;                  %噪声功率谱密度(双边带):d=Es/n0
Pn=n0*fs;                 %噪声的平均功率
sigma=sqrt(Pn);           %噪声的标准差（均值为0）

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%  确定仿真门限     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
G0=u0*sqrt(n0*Es);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%   Monte Carlo  仿真   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
pf_test=0;
pd_test=0;
N_exp=5000;               %仿真次数
for ii=1:N_exp
    wn=sigma*randn(N,1);  %仿真噪声信号
    
    %%% H1假设下
    x1=s+wn;
    G_1=s'*x1*ts;         %相关器输出（检测统计量）
    if G_1>G0
        pd_test=pd_test+1;
    end
    
    %%%% H0假设下
    x0=wn;
    G_0=s'*x0*ts;         %相关器输出（检测统计量）
    if G_0>G0
        pf_test=pf_test+1;
    end
    
end
pf_test=pf_test/N_exp;
pd_test=pd_test/N_exp;

    
    
    
    






